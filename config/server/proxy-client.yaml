server:
  bind-addr: 127.0.0.1
  bind-port: 8090
  middlewares: recovery,secure,cors
  max-connection: 5
proxy:
  local:
    bind-addr: 127.0.0.1
    bind-port: 8090
  remote:
    bind-addr: 127.0.0.1
    bind-port: 20020
    tls:
      cert-file: ./config/certs/client.crt
      cert-key: ./config/certs/client.key
      ca-file: ./config/certs/ca.crt
  controller:
    bind-addr: 127.0.0.1
    bind-port: 8083
    tls:
      cert-file: ./config/certs/client.crt
      cert-key: ./config/certs/client.key
      ca-file: ./config/certs/ca.crt
  pool-size: 50
consumer:
  max-consumer: 2
  bind-addr: 127.0.0.1
  bind-port: 1234
log:
  name: apiserver # Logger的名字
  development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
  level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, errors, dpanic, panic, fatal。
  format: console # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。
  enable-color: true # 是否开启颜色输出，true:是，false:否
  disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
  output-paths: ./proxy-client.log,stdout # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件。
  error-output-paths: ./proxy-client.errors.log # zap内部(非业务)错误日志输出路径，多个输出，逗号分开
